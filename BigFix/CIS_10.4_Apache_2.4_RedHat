<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
    <Fixlet>
        <Title>CIS Apache 2.4 Benchmark - 10.4 Ensure LimitRequestBody is Set</Title>
        <Description><![CDATA[
This Fixlet implements CIS Apache 2.4 Benchmark control 10.4 by setting LimitRequestBody to 102400.
This helps protect against denial of service attacks by limiting the size of HTTP request bodies.

Remediation will add or update the LimitRequestBody directive in Directory contexts.
        ]]></Description>
        <Relevance>unix of operating system</Relevance>
        <Relevance>exists file "/etc/redhat-release"</Relevance>
        <Relevance>exists file "/etc/httpd/conf/httpd.conf"</Relevance>
        <Relevance>not exists lines whose (it contains "LimitRequestBody 102400") of file "/etc/httpd/conf/httpd.conf"</Relevance>
        <Category>Security Settings</Category>
        <Source>CIS Apache 2.4 Benchmark</Source>
        <SourceID>10.4</SourceID>
        <SourceSeverity>Medium</SourceSeverity>
        <SourceReleaseDate>2021-01-01</SourceReleaseDate>
        <DefaultAction ID="Action1">
            <Description>
                <PreLink>Click </PreLink>
                <Link>here</Link>
                <PostLink> to set LimitRequestBody to 102400 bytes in Apache configuration.</PostLink>
            </Description>
            <ActionScript MIMEType="application/x-Fixlet-Windows-Shell">
#!/bin/bash

# Backup the original configuration
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak.$(date +%Y%m%d_%H%M%S)

# Function to add/update LimitRequestBody in a Directory section
update_directory_section() {
    local dir="$1"
    local conf_file="/etc/httpd/conf/httpd.conf"
    local temp_file=$(mktemp)
    
    awk -v dir="$dir" '
    BEGIN { in_section = 0; limit_added = 0 }
    {
        if ($0 ~ "^[[:space:]]*<Directory[[:space:]]+" dir "[[:space:]]*>") {
            in_section = 1
            print $0
            next
        }
        if (in_section && $0 ~ /^[[:space:]]*LimitRequestBody/) {
            print "    LimitRequestBody 102400"
            limit_added = 1
            next
        }
        if (in_section && $0 ~ "^[[:space:]]*</Directory>") {
            if (!limit_added) {
                print "    LimitRequestBody 102400"
            }
            in_section = 0
            limit_added = 0
        }
        print $0
    }' "$conf_file" > "$temp_file"
    
    mv "$temp_file" "$conf_file"
}

# Add/update LimitRequestBody in root Directory section
if ! grep -q "^[[:space:]]*<Directory[[:space:]]*/>.*LimitRequestBody" /etc/httpd/conf/httpd.conf; then
    if grep -q "^[[:space:]]*<Directory[[:space:]]*/>" /etc/httpd/conf/httpd.conf; then
        update_directory_section "/"
    else
        sed -i '1i\<Directory />\n    LimitRequestBody 102400\n</Directory>\n' /etc/httpd/conf/httpd.conf
    fi
fi

# Add/update LimitRequestBody in DocumentRoot Directory section
docroot=$(grep -i "^[[:space:]]*DocumentRoot" /etc/httpd/conf/httpd.conf | awk '{print $2}' | tr -d '"')
if [ -n "$docroot" ]; then
    if grep -q "^[[:space:]]*<Directory[[:space:]]*$docroot" /etc/httpd/conf/httpd.conf; then
        update_directory_section "$docroot"
    else
        echo -e "\n<Directory $docroot>\n    LimitRequestBody 102400\n</Directory>" >> /etc/httpd/conf/httpd.conf
    fi
fi

# Test the Apache configuration
if /usr/sbin/httpd -t; then
    # Restart Apache if test is successful
    systemctl restart httpd
else
    # Restore backup if test fails
    cp /etc/httpd/conf/httpd.conf.bak.$(date +%Y%m%d_%H%M%S) /etc/httpd/conf/httpd.conf
    exit 1
fi
            </ActionScript>
        </DefaultAction>
    </Fixlet>
</BES>
